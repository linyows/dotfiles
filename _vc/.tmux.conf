# unbind => default key
unbind C-b # => prefix
unbind %   # => split-window -h
unbind '"' # => split-window

# command prefix:
set -g prefix ^f

# global settings
set -g visual-bell on
set -g bell-action any
set -g default-command zsh
set -g history-limit 100000
setw -g automatic-rename off

# split keys
bind s split-window -v
bind v split-window -h

# move between panes using vi keys 'hjkl'
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes using vi keys 'hjkl'
bind -r C-h resize-pane -L 9
bind -r C-j resize-pane -D 7
bind -r C-k resize-pane -U 7
bind -r C-l resize-pane -R 9

# show window list
bind Space choose-window

# change layout, and swap from active pane to main pane
bind -r H select-layout main-vertical \; swap-pane -s : -t 0 \; select-pane -t 0 \; resize-pane -R 9
bind -r K select-layout main-horizontal \; swap-pane -s : -t 0 \; select-pane -t 0 \; resize-pane -D 18

# move between tmux sessions (tmux > 1.4)
bind N switch-client -n
bind P switch-client -p
bind L switch-client -l

# aliases for select-layout
bind | select-layout even-horizontal
bind _ select-layout even-vertical
bind S select-layout main-horizontal
bind V select-layout main-vertical
bind * select-layout tiled

# reassign ; from last-pane to last-window
# bind \; last-window

# new window with return
bind Enter new-window

# toggle pane
bind C-t run "tmux last-pane || tmux last-window || tmux new-window"

# enable 256 colors
#set -g default-terminal "screen-256color"
#set -g default-terminal "xterm-256color"
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",alacritty:RGB"

# vi mode for shortcuts
setw -g mode-keys vi
set -g status-keys vi

# activity
setw -g monitor-activity on
set -g visual-activity on

# mouse input
#setw -g mode-mouse off
#set -g mouse-select-pane off

# start window number from 1
set -g base-index 1

# extend message display time
set -g display-time 2000

# aggressively resize the chosen window
setw -g aggressive-resize on

# colour
setw -g window-status-style bg="colour4"
setw -g window-status-style fg="black"
setw -g window-status-current-style bg="white","bold",fg="black"
# setw -g window-status-current-attr bold,underscore
# setw -g window-status-alert-fg red
# setw -g window-status-alert-bg white

set -g display-panes-colour colour4
set -g message-style bg="white"
set -g pane-active-border-style fg="colour4"
set -g status-bg colour4
set -g status-fg black
# set -g status-left '[#20(whoami)@#H]#[default]'
set -g status-left '#[fg=colour255,bg=colour241] #h:#S #[default]'
set -g status-left-style fg="white"
# set -g status-right '%Y/%m/%d %a %H:%M#[default] '
set -g status-right " %a %b %d, %H:%M "
set -g status-right-style bg="colour4"
set -g status-right-style fg="colour7"

set -g set-titles-string "@#(hostname | sed 's/\\\\..*//')"

# compatible key bind with screen
bind C-[ copy-mode
bind C-c new-window
bind C-a last-window
bind C-n next-window
bind C-p previous-window
bind C-d detach-client
bind Q   break-pane

# reload tmux.conf
#bind r source-file ~/.tmux.conf

# mouse scroll
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
# set-window-option -g mode-mouse on

# tmux copy & pasten for OSX
#bind-key -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
#set-option -g default-command "tmux rename-window base; reattach-to-user-namespace -l $SHELL"
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

# output log
#bind ! pipe-pane 'cat >> $HOME/.tmux/tmux-#W.log' \; display-message 'Started logging to $HOME/.tmux/tmux-#W.log'
#bind @ pipe-pane \; display-message 'Ended logging to $HOME/.tmux/tmux-#W.log'

bind-key ! pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \; display-message "Logging start."
bind-key @ pipe-pane \; display-message "Logging end."
#bind-key v new-window -n 'Logging' \; pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "'
