#!/usr/bin/env zsh

notice() {
    echo "\033[1;32m$1\033[0m"
}
success() {
    echo "\033[1;32m$1\033[1;33m ;)\033[0m"
}
warn() {
    echo "\033[1;31m$1\033[1;33m O_o\033[0m"
}

APP_NAME=fanic
UNICORN=unicorn
UNICORN_CONFIG=config/unicorn.conf
HOST=127.0.0.1
#RAILS_ROOT=$(cd $(dirname $0);pwd)/..
RAILS_ROOT=`pwd`
if [ -f $RAILS_ROOT/.unicorn_port ]; then
    PORT=`cat $RAILS_ROOT/.unicorn_port`
elif [ -f $HOME/.unicorn_port ]; then
    PORT=`cat $HOME/.unicorn_port`
else
    warn "'.unicorn_port' not found"
    exit 2
fi
unicorn_process=`pgrep -lf $PORT | grep master`
PID=${unicorn_process%% *}

start() {
    if [ "$unicorn_process" != "" ]; then
        warn "Unicorn has already started..."
    else
        notice "Starting Unicorn: "
        echo "bundle exec $UNICORN -c $UNICORN_CONFIG -o $HOST -p $PORT -D"
        cd $RAILS_ROOT
        if bundle exec $UNICORN -c $UNICORN_CONFIG -o $HOST -p $PORT -D; then
            success "Done!"
        else
            warn "Failed..."
        fi
    fi
}

stop() {
    if [ "$unicorn_process" = "" ]; then
        warn "Unicorn has not started..."
        echo $unicorn_process
    else
        notice "Stopping Unicorn: "
        echo "kill $PID"
        if kill $PID; then
            success "Done!"
        else
            warn "Failed..."
        fi
    fi
}

reload() {
    if [ "$unicorn_process" = "" ]; then
        warn "Unicorn has not started..."
        echo $unicorn_process
    else
        notice "Reloading Unicorn: "
        echo "kill -s USR2 $PID"
        if kill -s USR2 $PID; then
            success "Done!"
        else
            warn "Failed..."
        fi
    fi
}

restart() {
    stop
    sleep 1
    start
}

case "$1" in
    start)
        $1
        ;;
    stop)
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        $1
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart|reload}"
        exit 2
esac
